@page "/future"
@using Radzen;
@using Radzen.Blazor;

<RadzenScheduler @ref=@scheduler SlotRender=@OnSlotRender AppointmentRender=@OnAppointmentRender
                 style="height:800px;" TItem="AppointmentData" StartProperty="Start" EndProperty="End"
                 TextProperty="Text" SelectedIndex="0" Data=@apDatas>
    <RadzenMonthView />
    <RadzenYearPlannerView />
    <RadzenYearView />
    <RadzenYearTimelineView />
</RadzenScheduler>
@code {
    RadzenScheduler<AppointmentData>? scheduler;
    IList<AppointmentData> apDatas { get; set; } = new List<AppointmentData>();
    IList<string> backcolors = new List<string>() { "#f6a278", "#f16744", "#c73618", "#004a59", "#027184", "#0193a5", "#000000", "#000000", "#000000" };
    IList<string> fontcolors = new List<string>() { "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#000000", "#000000", "#000000" };
    IList<DateTime> dateTimes = new List<DateTime>();

    protected override async Task OnParametersSetAsync()
    {
        apDatas.Clear();
        var startDate = new DateTime(2023, 4, 1);
        await Task.Factory.StartNew(() =>
        {
            while (!(startDate.Year == 2024 && startDate.Month == 4))
            {
                if (startDate.DayOfWeek == DayOfWeek.Saturday)
                {
                    apDatas.Add(new AppointmentData() { Start = startDate, End = startDate, Text = "会社休日", Data = "#00ced1" });
                }
                else if (startDate.DayOfWeek == DayOfWeek.Sunday)
                {
                    apDatas.Add(new AppointmentData() { Start = startDate, End = startDate, Text = "会社休日", Data = "#f08080" });
                }

                startDate = startDate.AddDays(1);
            }
            apDatas.Add(new AppointmentData() { Start = new DateTime(2023, 04, 29), End = new DateTime(2023, 04, 29), Text = "昭和の日", Data = "#f5deb3" });
            apDatas.Add(new AppointmentData() { Start = new DateTime(2023, 05, 03), End = new DateTime(2023, 05, 03), Text = "憲法記念日", Data = "#f5deb3" });
            apDatas.Add(new AppointmentData() { Start = new DateTime(2023, 05, 04), End = new DateTime(2023, 05, 04), Text = "みどりの日", Data = "#f5deb3" });
            apDatas.Add(new AppointmentData() { Start = new DateTime(2023, 05, 05), End = new DateTime(2023, 05, 05), Text = "こどもの日", Data = "#f5deb3" });
            apDatas.Add(new AppointmentData() { Start = new DateTime(2023, 07, 17), End = new DateTime(2023, 07, 17), Text = "海の日", Data = "#f5deb3" });
            apDatas.Add(new AppointmentData() { Start = new DateTime(2023, 08, 11), End = new DateTime(2023, 08, 11), Text = "山の日", Data = "#f5deb3" });
            apDatas.Add(new AppointmentData() { Start = new DateTime(2023, 09, 18), End = new DateTime(2023, 09, 18), Text = "敬老の日", Data = "#f5deb3" });
            apDatas.Add(new AppointmentData() { Start = new DateTime(2023, 09, 23), End = new DateTime(2023, 09, 23), Text = "秋分の日", Data = "#f5deb3" });
            apDatas.Add(new AppointmentData() { Start = new DateTime(2023, 10, 09), End = new DateTime(2023, 10, 09), Text = "スポーツの日", Data = "#f5deb3" });
            apDatas.Add(new AppointmentData() { Start = new DateTime(2023, 11, 03), End = new DateTime(2023, 11, 03), Text = "文化の日", Data = "#f5deb3" });
            //apDatas.Add(new AppointmentData() { Start = new DateTime(2023, 11, 23), End = new DateTime(2023, 11, 23), Text = "勤労感謝の日" });
            apDatas.Add(new AppointmentData() { Start = new DateTime(2024, 01, 01), End = new DateTime(2024, 01, 01), Text = "元日", Data = "#f5deb3" });
            apDatas.Add(new AppointmentData() { Start = new DateTime(2024, 01, 08), End = new DateTime(2024, 01, 08), Text = "成人の日", Data = "#f5deb3" });
            apDatas.Add(new AppointmentData() { Start = new DateTime(2024, 02, 11), End = new DateTime(2024, 02, 11), Text = "建国記念の日", Data = "#f5deb3" });
            apDatas.Add(new AppointmentData() { Start = new DateTime(2024, 02, 12), End = new DateTime(2024, 02, 12), Text = "振替休日", Data = "#f5deb3" });
            apDatas.Add(new AppointmentData() { Start = new DateTime(2024, 02, 23), End = new DateTime(2024, 02, 23), Text = "天皇誕生日", Data = "#f5deb3" });
            apDatas.Add(new AppointmentData() { Start = new DateTime(2024, 03, 20), End = new DateTime(2024, 03, 20), Text = "春分の日", Data = "#f5deb3" });
        });

        apDatas.Add(new AppointmentData() { Start = new DateTime(2023, 5, 1), End = new DateTime(2023, 5, 3), Text = "年休取得促進日", Data = "#ee82ee" });
        apDatas.Add(new AppointmentData() { Start = new DateTime(2023, 8, 5), End = new DateTime(2023, 8, 15), Text = "夏休み(前半)", Data = "#00ff7f" });
        apDatas.Add(new AppointmentData() { Start = new DateTime(2023, 8, 11), End = new DateTime(2023, 8, 21), Text = "夏休み(後半)", Data = "#7fffd4" });
        apDatas.Add(new AppointmentData() { Start = new DateTime(2023, 12, 29), End = new DateTime(2024, 1, 8), Text = "お正月", Data = "#b0c4de" });
        var _ = scheduler;
    }

    void OnSlotRender(SchedulerSlotRenderEventArgs args)
    {
        if (args.Start.DayOfWeek == DayOfWeek.Saturday)
        {
            args.Attributes["style"] = $"background-color: #00ced1; margin: 0px 0px 0px 0px;";
        }
        else if (args.Start.DayOfWeek == DayOfWeek.Sunday)
        {
            args.Attributes["style"] = $"background-color: #f08080; margin: 0px 0px 0px 0px;";
        }

    }

    void OnAppointmentRender(SchedulerAppointmentRenderEventArgs<AppointmentData> args)
    {
        args.Attributes["style"] = $"color: #000000; background-color: {args.Data.Data.ToString()}; margin: 0px 0px 0px 0px;";

    }

}

